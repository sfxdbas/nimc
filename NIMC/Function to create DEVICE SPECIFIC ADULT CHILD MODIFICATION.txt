
-- FUNCTION: public.create_device_setting_ADULT_CHILD_MODIFICATION(text[])

-- DROP FUNCTION public.create_device_setting_ADULT_CHILD_MODIFICATION(text[]);

CREATE OR REPLACE FUNCTION public.create_device_setting_ADULT_CHILD_MODIFICATION(
	device_id text[])
RETURNS void
    LANGUAGE 'plpgsql'
    VOLATILE 
    COST 100
    
AS $BODY$

DECLARE
  a_count integer;

begin 
	
	-- drop tables to hold the temporary records
	drop table if exists temp_setting_table;
	drop table if exists temp_setting_table2;
	
	create table temp_setting_table as
	select device_id as device_ids;
	
	create table temp_setting_table2 as 
  	SELECT unnest(device_ids) as device_ids FROM temp_setting_table;
  	GET DIAGNOSTICS a_count = ROW_COUNT;

	RAISE NOTICE '% rows were inserted', a_count ;

  
  	-- create setting to devices
	insert into device_specific_setting
	(pk,active,create_date,deleted,last_modified,setting_name,setting_value,enrollment_ref_fk)
	select nextval('hibernate_sequence') as pk, 'true' as active, localtimestamp as create_date, 'false' as deleted, 
	localtimestamp as last_modified,'DIASPORA-ENROLLMENT-USE-CASE' as setting_name,'ADULT_MODIFICATION,CHILD_MODIFICATION'as setting_value, er.id as enrollment_ref_fk
	from enrollment_ref er where er.device_id in 
	(select device_ids from temp_setting_table2)
	ON CONFLICT (setting_name, enrollment_ref_fk) 
	DO update set setting_value = excluded.setting_value, last_modified = last_modified  ;
	GET DIAGNOSTICS a_count = ROW_COUNT;

	RAISE NOTICE '% rows were affected', a_count ;
	
end;
$BODY$;

ALTER FUNCTION public.create_device_setting_ADULT_CHILD_MODIFICATION(text[])
    OWNER TO seamfix;





-----THIS IS THE ONE I USED ON NIMC PROD AND UAT

CREATE OR REPLACE FUNCTION public.create_device_setting_ADULT_CHILD_MODIFICATION(
	device_id text[])
RETURNS void
    LANGUAGE 'plpgsql'
    VOLATILE 
    COST 100
    
AS $BODY$

DECLARE
  a_count integer;

begin 
	
	-- drop tables to hold the temporary records
	drop table if exists temp_setting_table;

	create table temp_setting_table as
	with temp_setting (device_ids) as  
	   	(  
	    select device_id
	    )
	 
	SELECT unnest(device_ids) as device_ids FROM temp_setting;
	GET DIAGNOSTICS a_count = ROW_COUNT;
	RAISE NOTICE '% rows were inserted', a_count ;

   	-- create setting to devices
	insert into device_specific_setting
	(pk,active,create_date,deleted,last_modified,setting_name,setting_value,enrollment_ref_fk)
	select nextval('hibernate_sequence') as pk, 'true' as active, localtimestamp as create_date, 'false' as deleted, 
	localtimestamp as last_modified,'DIASPORA-ENROLLMENT-USE-CASE' as setting_name,'ADULT_MODIFICATION,CHILD_MODIFICATION'as setting_value, er.id as enrollment_ref_fk
	from enrollment_ref er where er.device_id in 
	(select device_ids from temp_setting_table)
	ON CONFLICT (setting_name, enrollment_ref_fk) 
	DO update set setting_value = excluded.setting_value, last_modified = localtimestamp  ;
	GET DIAGNOSTICS a_count = ROW_COUNT;

	RAISE NOTICE '% rows were affected', a_count ;
	
end;
$BODY$;

ALTER FUNCTION public.create_device_setting_ADULT_CHILD_MODIFICATION(text[])
    OWNER TO seamfix;



----how to use the function to create device specific setting

SELECT public.create_device_setting_ADULT_CHILD_MODIFICATION('{device_ids}');
SELECT public.create_device_setting_ADULT_CHILD_MODIFICATION ('{INFINIX-356545099122008}');


SELECT public.create_device_setting_ADULT_CHILD_MODIFICATION ('{device_ids1,device_ids2,device_ids3,device_ids4}');
SELECT public.create_device_setting_ADULT_CHILD_MODIFICATION ('{INFINIX-356545099122008,
SAMSUNG-355646071756655,
HMDGLOBAL-356020084565348,
SAMSUNG-356136101332346}');
